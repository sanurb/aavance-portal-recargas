<div class="min-h-screen flex flex-col items-center justify-center">
    <div class="bg-white p-10 rounded-lg shadow-md w-full max-w-sm">
        <div class="flex justify-center mb-6">
            <img src="../../public/pse-logo.png" alt="PSE logo placeholder image" class="rounded-full" width="100px" height="100px">
        </div>
        <h1 class="text-2xl font-medium text-center mb-6">Recarga con PSE</h1>
        <p class="text-sm text-center mb-4">Ingresa los datos de tu cuenta AAvance a recargar</p>
        <div class="mb-4">
            <label class="block text-sm font-medium mb-2" for="phone-number">Número de celular de la cuenta</label>
            <input type="tel" minlength="10" maxlength="10" id="phone-number" class="bg-white border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-3" required>
        </div>
        <div class="mb-4">
            <label class="block text-sm font-medium mb-2" for="bank_code">Banco</label>
            <select id="bank_code"
                class="w-full p-2.5 text-gray-500 bg-white border-gray-300 rounded-md shadow-sm outline-none appearance-none focus:border-indigo-600">
                <option selected>Seleccione el banco</option>
            </select>
        </div>
        <div class="mb-4">
            <label class="block text-sm font-medium mb-2" for="amount">Monto a recargar</label>
            <input type="text" id="amount" inputmode="numeric" minlength="5"
            class="bg-white border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-3" placeholder="Recarga mínima $10.000" required>
            <span id="amount-error" class="hidden text-red-500 text-xs mt-1"></span>
        </div>
        <button class="recargar-button w-full text-white bg-sky-700 hover:bg-sky-800 focus:ring-4 focus:ring-sky-300 font-medium rounded-lg text-lg px-5 py-2.5 me-2 mb-2 dark:bg-sky-600 dark:hover:sky-blue-700 focus:outline-none dark:focus:ring-sky-800">RECARGAR</button>
    </div>
</div>

<script lang="js">
    const API_KEY = "ODE2ZGViYWIzZTI1Njc2MWJiYzI1YWMxZWNiMDNjNzA0MDBlZTIwM2QyN2QyNDQxZmUyMzFhZGQyMzE2ZTUyMzdkZmVhMzc4MGQxNmFkZjk5YWMxZWM5NDNiYjJiNmE1M2M0YmEzYzk0MzRlMmEwMjAzMDY3MDVmZDE2OGJkNTk=";

    const COLOMBIAN_NUMBER_LENGTH = 10;
    const MIN_RECHARGE_AMOUNT = 10000;
    const MAX_RECHARGE_AMOUNT = 2200000;

    function fetchBanks() {
        fetch("https://serviceregister.paymentsway.co/ClientAPI/ObtenerListadoBancos", {
            method: "GET",
            headers: {
                "Authorization": API_KEY,
                "Content-Type": "application/json"
            }
        })
        .then(response => response.json())
        .then(data => {
            updateButtonState();
            const select = document.getElementById("bank_code");
            data.forEach(banco => {
                const option = document.createElement("option");
                option.value = banco.codigoach;
                option.text = banco.nombre;
                select.appendChild(option);
            });
        })
        .catch(error => console.error("Error al cargar bancos:", error));
    }

    document.addEventListener("DOMContentLoaded", () => {
        fetchBanks();
        updateButtonState();
    });

    function extractUserDataFromLocalStorage() {
        const pin = localStorage.getItem("pin");
        const user = localStorage.getItem("user");
        const verificationCode = localStorage.getItem("verificationCode");
        return { pin, user, verificationCode };
    }

    function updateButtonState() {
        const phoneNumber = document.getElementById('phone-number').value;
        const bankCode = document.getElementById('bank_code').value;
        const amount = document.getElementById('amount').value.replace(/\D/g, '');
        const isFormValid = phoneNumber.length === COLOMBIAN_NUMBER_LENGTH && bankCode !== '' && amount !== '' && !isNaN(parseInt(amount)) && parseInt(amount) >= MIN_RECHARGE_AMOUNT && parseInt(amount) <= MAX_RECHARGE_AMOUNT;

        recargarButton.disabled = !isFormValid;
        recargarButton.classList.toggle('cursor-not-allowed', !isFormValid);
    }

    document.addEventListener('input', updateButtonState);

    const recargarButton = document.querySelector('.recargar-button');
    recargarButton.addEventListener('click', (e) => {
        if (!document.getElementById('amount').checkValidity()) {
            e.preventDefault();
            return;
        }
        const phone = document.getElementById('phone-number').value;
        const bank_code = document.getElementById('bank_code').value;
        const amount = document.getElementById('amount').value.replace(/\D/g, '');
        const bank_name = document.querySelector('#bank_code option:checked').text;

        const { pin, user, verificationCode } = extractUserDataFromLocalStorage();

        const requestBody = {
            phone,
            bank_code,
            bank_name,
            amount,
            pin,
            idDocument: user,
            code: verificationCode
        };

        fetch('https://aavancepluginintegrations.paymentsway.co/recharge/withPse', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(requestBody)
        })
        .then(response => response.text()) // Response esta en texto plano
        .then(url => {
            if (url.includes('error')) {
                return false;
            }
            window.open(url, '_blank');
        })
        .catch(error => {
            console.error('Error al realizar la recarga', error);
        });
    });

    const amountInput = document.getElementById('amount');
    const amountError = document.getElementById('amount-error');

    amountInput.addEventListener('input', handleAmountInput);

    function handleAmountInput(e) {
        let numberValue = e.target.value.replace(/\D/g, '');
        numberValue = parseInt(numberValue, 10);

        if (!isNaN(numberValue)) {
            e.target.value = new Intl.NumberFormat('es-CO', { style: 'currency', currency: 'COP', maximumFractionDigits: 0 }).format(numberValue);
            if (numberValue < MIN_RECHARGE_AMOUNT || numberValue > MAX_RECHARGE_AMOUNT) {
                e.target.classList.add('border-red-500');
                amountError.textContent = 'El monto debe estar entre $10,000 y $2,200,000';
                amountError.classList.remove('hidden');
                e.target.setCustomValidity('El monto debe estar entre $10,000 y $2,200,000.');
            } else {
                e.target.classList.remove('border-red-500');
                amountError.classList.add('hidden');
                e.target.setCustomValidity('');
            }
        } else {
            e.target.value = '';
        }
    }

</script>